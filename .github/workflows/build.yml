name: Build and test Go
on: [push, pull_request]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v1
      - name: Preparing build environment
        run:
          docker build -q -t confd_builder -f Dockerfile.build.alpine .
      - name: Version
        id: version
        run: "egrep -o '[0-9]+\.[0-9a-z.\-]+' version.go"
      - name: Build confd
        run: |
          docker run --rm -v ${PWD}:/app -e "GOOS=linux" -e "GOARCH=arm64" -e "CGO_ENABLED=0" confd_builder \
            go build -ldflags="-s -w -X main.GitSHA=${GIT_SHA}" -o bin/confd-${{ steps.version.outputs.version }}-linux-arm64
      - name: test
        run: |
          ls -l bin
      - name: release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
      - name: Upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/confd-0.17.0-dev-linux-arm64
          asset_name: confd-0.17.0-dev-linux-arm64
          asset_content_type: application/octet-stream
